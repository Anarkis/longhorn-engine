// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	FileRemoveRequest
	FileRenameRequest
	ReceiverLaunchRequest
	ReceiverLaunchReply
	FileSendRequest
	FileCoalesceRequest
	BackupCreateRequest
	BackupCreateReply
	BackupRemoveRequest
	BackupProgressRequest
	BackupProgressReply
	BackupRestoreRequest
	BackupRestoreIncrementallyRequest
	RestoreStatusReply
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileRemoveRequest struct {
	FileName string `protobuf:"bytes,1,opt,name=fileName" json:"fileName,omitempty"`
}

func (m *FileRemoveRequest) Reset()                    { *m = FileRemoveRequest{} }
func (m *FileRemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*FileRemoveRequest) ProtoMessage()               {}
func (*FileRemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FileRemoveRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type FileRenameRequest struct {
	OldFileName string `protobuf:"bytes,1,opt,name=oldFileName" json:"oldFileName,omitempty"`
	NewFileName string `protobuf:"bytes,2,opt,name=newFileName" json:"newFileName,omitempty"`
}

func (m *FileRenameRequest) Reset()                    { *m = FileRenameRequest{} }
func (m *FileRenameRequest) String() string            { return proto.CompactTextString(m) }
func (*FileRenameRequest) ProtoMessage()               {}
func (*FileRenameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileRenameRequest) GetOldFileName() string {
	if m != nil {
		return m.OldFileName
	}
	return ""
}

func (m *FileRenameRequest) GetNewFileName() string {
	if m != nil {
		return m.NewFileName
	}
	return ""
}

type ReceiverLaunchRequest struct {
	ToFileName string `protobuf:"bytes,1,opt,name=toFileName" json:"toFileName,omitempty"`
}

func (m *ReceiverLaunchRequest) Reset()                    { *m = ReceiverLaunchRequest{} }
func (m *ReceiverLaunchRequest) String() string            { return proto.CompactTextString(m) }
func (*ReceiverLaunchRequest) ProtoMessage()               {}
func (*ReceiverLaunchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReceiverLaunchRequest) GetToFileName() string {
	if m != nil {
		return m.ToFileName
	}
	return ""
}

type ReceiverLaunchReply struct {
	Port int32 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
}

func (m *ReceiverLaunchReply) Reset()                    { *m = ReceiverLaunchReply{} }
func (m *ReceiverLaunchReply) String() string            { return proto.CompactTextString(m) }
func (*ReceiverLaunchReply) ProtoMessage()               {}
func (*ReceiverLaunchReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReceiverLaunchReply) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type FileSendRequest struct {
	FromFileName string `protobuf:"bytes,1,opt,name=fromFileName" json:"fromFileName,omitempty"`
	Host         string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port         int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
}

func (m *FileSendRequest) Reset()                    { *m = FileSendRequest{} }
func (m *FileSendRequest) String() string            { return proto.CompactTextString(m) }
func (*FileSendRequest) ProtoMessage()               {}
func (*FileSendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FileSendRequest) GetFromFileName() string {
	if m != nil {
		return m.FromFileName
	}
	return ""
}

func (m *FileSendRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *FileSendRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type FileCoalesceRequest struct {
	FromFileName string `protobuf:"bytes,1,opt,name=fromFileName" json:"fromFileName,omitempty"`
	ToFileName   string `protobuf:"bytes,2,opt,name=toFileName" json:"toFileName,omitempty"`
}

func (m *FileCoalesceRequest) Reset()                    { *m = FileCoalesceRequest{} }
func (m *FileCoalesceRequest) String() string            { return proto.CompactTextString(m) }
func (*FileCoalesceRequest) ProtoMessage()               {}
func (*FileCoalesceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FileCoalesceRequest) GetFromFileName() string {
	if m != nil {
		return m.FromFileName
	}
	return ""
}

func (m *FileCoalesceRequest) GetToFileName() string {
	if m != nil {
		return m.ToFileName
	}
	return ""
}

type BackupCreateRequest struct {
	SnapshotFileName string            `protobuf:"bytes,1,opt,name=snapshotFileName" json:"snapshotFileName,omitempty"`
	BackupTarget     string            `protobuf:"bytes,2,opt,name=backupTarget" json:"backupTarget,omitempty"`
	VolumeName       string            `protobuf:"bytes,3,opt,name=volumeName" json:"volumeName,omitempty"`
	Labels           []string          `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty"`
	Credential       map[string]string `protobuf:"bytes,5,rep,name=credential" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BackupCreateRequest) Reset()                    { *m = BackupCreateRequest{} }
func (m *BackupCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupCreateRequest) ProtoMessage()               {}
func (*BackupCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BackupCreateRequest) GetSnapshotFileName() string {
	if m != nil {
		return m.SnapshotFileName
	}
	return ""
}

func (m *BackupCreateRequest) GetBackupTarget() string {
	if m != nil {
		return m.BackupTarget
	}
	return ""
}

func (m *BackupCreateRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *BackupCreateRequest) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *BackupCreateRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

type BackupCreateReply struct {
	Backup string `protobuf:"bytes,1,opt,name=backup" json:"backup,omitempty"`
}

func (m *BackupCreateReply) Reset()                    { *m = BackupCreateReply{} }
func (m *BackupCreateReply) String() string            { return proto.CompactTextString(m) }
func (*BackupCreateReply) ProtoMessage()               {}
func (*BackupCreateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BackupCreateReply) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

type BackupRemoveRequest struct {
	Backup string `protobuf:"bytes,1,opt,name=backup" json:"backup,omitempty"`
}

func (m *BackupRemoveRequest) Reset()                    { *m = BackupRemoveRequest{} }
func (m *BackupRemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRemoveRequest) ProtoMessage()               {}
func (*BackupRemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BackupRemoveRequest) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

type BackupProgressRequest struct {
	Backup string `protobuf:"bytes,1,opt,name=backup" json:"backup,omitempty"`
}

func (m *BackupProgressRequest) Reset()                    { *m = BackupProgressRequest{} }
func (m *BackupProgressRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupProgressRequest) ProtoMessage()               {}
func (*BackupProgressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *BackupProgressRequest) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

type BackupProgressReply struct {
	Progress     int32  `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	BackupURL    string `protobuf:"bytes,2,opt,name=backupURL" json:"backupURL,omitempty"`
	BackupError  string `protobuf:"bytes,3,opt,name=backupError" json:"backupError,omitempty"`
	SnapshotName string `protobuf:"bytes,4,opt,name=snapshotName" json:"snapshotName,omitempty"`
	State        string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
}

func (m *BackupProgressReply) Reset()                    { *m = BackupProgressReply{} }
func (m *BackupProgressReply) String() string            { return proto.CompactTextString(m) }
func (*BackupProgressReply) ProtoMessage()               {}
func (*BackupProgressReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *BackupProgressReply) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *BackupProgressReply) GetBackupURL() string {
	if m != nil {
		return m.BackupURL
	}
	return ""
}

func (m *BackupProgressReply) GetBackupError() string {
	if m != nil {
		return m.BackupError
	}
	return ""
}

func (m *BackupProgressReply) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *BackupProgressReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type BackupRestoreRequest struct {
	Backup           string            `protobuf:"bytes,1,opt,name=backup" json:"backup,omitempty"`
	SnapshotFileName string            `protobuf:"bytes,2,opt,name=snapshotFileName" json:"snapshotFileName,omitempty"`
	Credential       map[string]string `protobuf:"bytes,3,rep,name=credential" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BackupRestoreRequest) Reset()                    { *m = BackupRestoreRequest{} }
func (m *BackupRestoreRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRestoreRequest) ProtoMessage()               {}
func (*BackupRestoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BackupRestoreRequest) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

func (m *BackupRestoreRequest) GetSnapshotFileName() string {
	if m != nil {
		return m.SnapshotFileName
	}
	return ""
}

func (m *BackupRestoreRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

type BackupRestoreIncrementallyRequest struct {
	Backup                 string            `protobuf:"bytes,1,opt,name=backup" json:"backup,omitempty"`
	DeltaFileName          string            `protobuf:"bytes,2,opt,name=deltaFileName" json:"deltaFileName,omitempty"`
	LastRestoredBackupName string            `protobuf:"bytes,3,opt,name=lastRestoredBackupName" json:"lastRestoredBackupName,omitempty"`
	SnapshotDiskName       string            `protobuf:"bytes,4,opt,name=snapshotDiskName" json:"snapshotDiskName,omitempty"`
	Credential             map[string]string `protobuf:"bytes,5,rep,name=credential" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BackupRestoreIncrementallyRequest) Reset()         { *m = BackupRestoreIncrementallyRequest{} }
func (m *BackupRestoreIncrementallyRequest) String() string { return proto.CompactTextString(m) }
func (*BackupRestoreIncrementallyRequest) ProtoMessage()    {}
func (*BackupRestoreIncrementallyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *BackupRestoreIncrementallyRequest) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

func (m *BackupRestoreIncrementallyRequest) GetDeltaFileName() string {
	if m != nil {
		return m.DeltaFileName
	}
	return ""
}

func (m *BackupRestoreIncrementallyRequest) GetLastRestoredBackupName() string {
	if m != nil {
		return m.LastRestoredBackupName
	}
	return ""
}

func (m *BackupRestoreIncrementallyRequest) GetSnapshotDiskName() string {
	if m != nil {
		return m.SnapshotDiskName
	}
	return ""
}

func (m *BackupRestoreIncrementallyRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

type RestoreStatusReply struct {
	IsRestoring  bool   `protobuf:"varint,1,opt,name=isRestoring" json:"isRestoring,omitempty"`
	LastRestored string `protobuf:"bytes,2,opt,name=lastRestored" json:"lastRestored,omitempty"`
	Progress     int32  `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
	Error        string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	DestFileName string `protobuf:"bytes,5,opt,name=destFileName" json:"destFileName,omitempty"`
	State        string `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
}

func (m *RestoreStatusReply) Reset()                    { *m = RestoreStatusReply{} }
func (m *RestoreStatusReply) String() string            { return proto.CompactTextString(m) }
func (*RestoreStatusReply) ProtoMessage()               {}
func (*RestoreStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RestoreStatusReply) GetIsRestoring() bool {
	if m != nil {
		return m.IsRestoring
	}
	return false
}

func (m *RestoreStatusReply) GetLastRestored() string {
	if m != nil {
		return m.LastRestored
	}
	return ""
}

func (m *RestoreStatusReply) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *RestoreStatusReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *RestoreStatusReply) GetDestFileName() string {
	if m != nil {
		return m.DestFileName
	}
	return ""
}

func (m *RestoreStatusReply) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*FileRemoveRequest)(nil), "FileRemoveRequest")
	proto.RegisterType((*FileRenameRequest)(nil), "FileRenameRequest")
	proto.RegisterType((*ReceiverLaunchRequest)(nil), "ReceiverLaunchRequest")
	proto.RegisterType((*ReceiverLaunchReply)(nil), "ReceiverLaunchReply")
	proto.RegisterType((*FileSendRequest)(nil), "FileSendRequest")
	proto.RegisterType((*FileCoalesceRequest)(nil), "FileCoalesceRequest")
	proto.RegisterType((*BackupCreateRequest)(nil), "BackupCreateRequest")
	proto.RegisterType((*BackupCreateReply)(nil), "BackupCreateReply")
	proto.RegisterType((*BackupRemoveRequest)(nil), "BackupRemoveRequest")
	proto.RegisterType((*BackupProgressRequest)(nil), "BackupProgressRequest")
	proto.RegisterType((*BackupProgressReply)(nil), "BackupProgressReply")
	proto.RegisterType((*BackupRestoreRequest)(nil), "BackupRestoreRequest")
	proto.RegisterType((*BackupRestoreIncrementallyRequest)(nil), "BackupRestoreIncrementallyRequest")
	proto.RegisterType((*RestoreStatusReply)(nil), "RestoreStatusReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SyncAgentService service

type SyncAgentServiceClient interface {
	FileRemove(ctx context.Context, in *FileRemoveRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	FileRename(ctx context.Context, in *FileRenameRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	FileCoalesce(ctx context.Context, in *FileCoalesceRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	FileSend(ctx context.Context, in *FileSendRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	ReceiverLaunch(ctx context.Context, in *ReceiverLaunchRequest, opts ...grpc.CallOption) (*ReceiverLaunchReply, error)
	BackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*BackupCreateReply, error)
	BackupRemove(ctx context.Context, in *BackupRemoveRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	BackupRestore(ctx context.Context, in *BackupRestoreRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	BackupRestoreIncrementally(ctx context.Context, in *BackupRestoreIncrementallyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	BackupGetStatus(ctx context.Context, in *BackupProgressRequest, opts ...grpc.CallOption) (*BackupProgressReply, error)
	Reset(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	RestoreStatus(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*RestoreStatusReply, error)
}

type syncAgentServiceClient struct {
	cc *grpc.ClientConn
}

func NewSyncAgentServiceClient(cc *grpc.ClientConn) SyncAgentServiceClient {
	return &syncAgentServiceClient{cc}
}

func (c *syncAgentServiceClient) FileRemove(ctx context.Context, in *FileRemoveRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/FileRemove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) FileRename(ctx context.Context, in *FileRenameRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/FileRename", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) FileCoalesce(ctx context.Context, in *FileCoalesceRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/FileCoalesce", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) FileSend(ctx context.Context, in *FileSendRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/FileSend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) ReceiverLaunch(ctx context.Context, in *ReceiverLaunchRequest, opts ...grpc.CallOption) (*ReceiverLaunchReply, error) {
	out := new(ReceiverLaunchReply)
	err := grpc.Invoke(ctx, "/SyncAgentService/ReceiverLaunch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) BackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*BackupCreateReply, error) {
	out := new(BackupCreateReply)
	err := grpc.Invoke(ctx, "/SyncAgentService/BackupCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) BackupRemove(ctx context.Context, in *BackupRemoveRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/BackupRemove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) BackupRestore(ctx context.Context, in *BackupRestoreRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/BackupRestore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) BackupRestoreIncrementally(ctx context.Context, in *BackupRestoreIncrementallyRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/BackupRestoreIncrementally", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) BackupGetStatus(ctx context.Context, in *BackupProgressRequest, opts ...grpc.CallOption) (*BackupProgressReply, error) {
	out := new(BackupProgressReply)
	err := grpc.Invoke(ctx, "/SyncAgentService/BackupGetStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) Reset(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/SyncAgentService/Reset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncAgentServiceClient) RestoreStatus(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*RestoreStatusReply, error) {
	out := new(RestoreStatusReply)
	err := grpc.Invoke(ctx, "/SyncAgentService/RestoreStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SyncAgentService service

type SyncAgentServiceServer interface {
	FileRemove(context.Context, *FileRemoveRequest) (*google_protobuf.Empty, error)
	FileRename(context.Context, *FileRenameRequest) (*google_protobuf.Empty, error)
	FileCoalesce(context.Context, *FileCoalesceRequest) (*google_protobuf.Empty, error)
	FileSend(context.Context, *FileSendRequest) (*google_protobuf.Empty, error)
	ReceiverLaunch(context.Context, *ReceiverLaunchRequest) (*ReceiverLaunchReply, error)
	BackupCreate(context.Context, *BackupCreateRequest) (*BackupCreateReply, error)
	BackupRemove(context.Context, *BackupRemoveRequest) (*google_protobuf.Empty, error)
	BackupRestore(context.Context, *BackupRestoreRequest) (*google_protobuf.Empty, error)
	BackupRestoreIncrementally(context.Context, *BackupRestoreIncrementallyRequest) (*google_protobuf.Empty, error)
	BackupGetStatus(context.Context, *BackupProgressRequest) (*BackupProgressReply, error)
	Reset(context.Context, *google_protobuf.Empty) (*google_protobuf.Empty, error)
	RestoreStatus(context.Context, *google_protobuf.Empty) (*RestoreStatusReply, error)
}

func RegisterSyncAgentServiceServer(s *grpc.Server, srv SyncAgentServiceServer) {
	s.RegisterService(&_SyncAgentService_serviceDesc, srv)
}

func _SyncAgentService_FileRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).FileRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/FileRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).FileRemove(ctx, req.(*FileRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_FileRename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).FileRename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/FileRename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).FileRename(ctx, req.(*FileRenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_FileCoalesce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileCoalesceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).FileCoalesce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/FileCoalesce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).FileCoalesce(ctx, req.(*FileCoalesceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_FileSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).FileSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/FileSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).FileSend(ctx, req.(*FileSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_ReceiverLaunch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiverLaunchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).ReceiverLaunch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/ReceiverLaunch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).ReceiverLaunch(ctx, req.(*ReceiverLaunchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_BackupCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).BackupCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/BackupCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).BackupCreate(ctx, req.(*BackupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_BackupRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).BackupRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/BackupRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).BackupRemove(ctx, req.(*BackupRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_BackupRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).BackupRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/BackupRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).BackupRestore(ctx, req.(*BackupRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_BackupRestoreIncrementally_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRestoreIncrementallyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).BackupRestoreIncrementally(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/BackupRestoreIncrementally",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).BackupRestoreIncrementally(ctx, req.(*BackupRestoreIncrementallyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_BackupGetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).BackupGetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/BackupGetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).BackupGetStatus(ctx, req.(*BackupProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).Reset(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncAgentService_RestoreStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncAgentServiceServer).RestoreStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SyncAgentService/RestoreStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncAgentServiceServer).RestoreStatus(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SyncAgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SyncAgentService",
	HandlerType: (*SyncAgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FileRemove",
			Handler:    _SyncAgentService_FileRemove_Handler,
		},
		{
			MethodName: "FileRename",
			Handler:    _SyncAgentService_FileRename_Handler,
		},
		{
			MethodName: "FileCoalesce",
			Handler:    _SyncAgentService_FileCoalesce_Handler,
		},
		{
			MethodName: "FileSend",
			Handler:    _SyncAgentService_FileSend_Handler,
		},
		{
			MethodName: "ReceiverLaunch",
			Handler:    _SyncAgentService_ReceiverLaunch_Handler,
		},
		{
			MethodName: "BackupCreate",
			Handler:    _SyncAgentService_BackupCreate_Handler,
		},
		{
			MethodName: "BackupRemove",
			Handler:    _SyncAgentService_BackupRemove_Handler,
		},
		{
			MethodName: "BackupRestore",
			Handler:    _SyncAgentService_BackupRestore_Handler,
		},
		{
			MethodName: "BackupRestoreIncrementally",
			Handler:    _SyncAgentService_BackupRestoreIncrementally_Handler,
		},
		{
			MethodName: "BackupGetStatus",
			Handler:    _SyncAgentService_BackupGetStatus_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _SyncAgentService_Reset_Handler,
		},
		{
			MethodName: "RestoreStatus",
			Handler:    _SyncAgentService_RestoreStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 832 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xd1, 0x6a, 0xe3, 0x46,
	0x14, 0x8d, 0xed, 0xd8, 0xd8, 0x37, 0x49, 0xe3, 0x8c, 0x1d, 0x63, 0xd4, 0x52, 0x5c, 0x91, 0x42,
	0xda, 0xd2, 0x31, 0xa4, 0x90, 0xb6, 0x81, 0x96, 0xa4, 0x89, 0x53, 0x0a, 0xa1, 0x14, 0xb9, 0xa5,
	0xec, 0xc2, 0x3e, 0x8c, 0xe5, 0x1b, 0x47, 0x44, 0xd6, 0x68, 0x47, 0x63, 0x2f, 0xfe, 0x97, 0x7d,
	0xda, 0xd7, 0xfd, 0x8f, 0xfd, 0x86, 0x7d, 0xdc, 0x4f, 0x59, 0xa4, 0x91, 0xe4, 0x91, 0x2c, 0xdb,
	0xbb, 0x0f, 0x79, 0xd3, 0x1c, 0xcd, 0x39, 0x77, 0xee, 0x9d, 0x7b, 0xe7, 0x40, 0x43, 0xf8, 0x36,
	0xf5, 0x05, 0x97, 0xdc, 0xf8, 0x72, 0xc2, 0xf9, 0xc4, 0xc5, 0x7e, 0xb4, 0x1a, 0xcd, 0xee, 0xfb,
	0x38, 0xf5, 0xe5, 0x42, 0xfd, 0x34, 0xfb, 0x70, 0x74, 0xeb, 0xb8, 0x68, 0xe1, 0x94, 0xcf, 0xd1,
	0xc2, 0x97, 0x33, 0x0c, 0x24, 0x31, 0xa0, 0x7e, 0xef, 0xb8, 0xf8, 0x37, 0x9b, 0x62, 0xb7, 0xd4,
	0x2b, 0x9d, 0x36, 0xac, 0x74, 0x6d, 0xfe, 0x9f, 0x10, 0x3c, 0x36, 0x4d, 0x09, 0x3d, 0xd8, 0xe3,
	0xee, 0xf8, 0x36, 0xcb, 0xd1, 0xa1, 0x70, 0x87, 0x87, 0xaf, 0xd2, 0x1d, 0x65, 0xb5, 0x43, 0x83,
	0xcc, 0x9f, 0xe1, 0xd8, 0x42, 0x1b, 0x9d, 0x39, 0x8a, 0x3b, 0x36, 0xf3, 0xec, 0x87, 0x44, 0xfc,
	0x6b, 0x00, 0xc9, 0x73, 0xda, 0x1a, 0x62, 0x7e, 0x07, 0xad, 0x3c, 0xd1, 0x77, 0x17, 0x84, 0xc0,
	0xae, 0xcf, 0x85, 0x8c, 0x08, 0x55, 0x2b, 0xfa, 0x36, 0x5f, 0xc0, 0x61, 0x48, 0x1b, 0xa2, 0x37,
	0x4e, 0xd4, 0x4d, 0xd8, 0xbf, 0x17, 0x7c, 0x9a, 0xd3, 0xcf, 0x60, 0xa1, 0xd4, 0x03, 0x0f, 0x64,
	0x7c, 0xea, 0xe8, 0x3b, 0x95, 0xaf, 0x68, 0xf2, 0xcf, 0xa0, 0x15, 0x72, 0xae, 0x39, 0x73, 0x31,
	0xb0, 0xf1, 0x73, 0x42, 0x64, 0x93, 0x2c, 0xaf, 0x24, 0xf9, 0xa6, 0x0c, 0xad, 0x3f, 0x98, 0xfd,
	0x38, 0xf3, 0xaf, 0x05, 0x32, 0x99, 0x6a, 0x7f, 0x0f, 0xcd, 0xc0, 0x63, 0x7e, 0xf0, 0xc0, 0x65,
	0x4e, 0x7f, 0x05, 0x0f, 0xcf, 0x31, 0x8a, 0x24, 0xfe, 0x65, 0x62, 0x82, 0x49, 0x3a, 0x19, 0x2c,
	0x3c, 0xc7, 0x9c, 0xbb, 0xb3, 0xa9, 0x52, 0xaa, 0xa8, 0x73, 0x2c, 0x11, 0xd2, 0x81, 0x9a, 0xcb,
	0x46, 0xe8, 0x06, 0xdd, 0xdd, 0x5e, 0xe5, 0xb4, 0x61, 0xc5, 0x2b, 0x72, 0x03, 0x60, 0x0b, 0x1c,
	0xa3, 0x27, 0x1d, 0xe6, 0x76, 0xab, 0xbd, 0xca, 0xe9, 0xde, 0xd9, 0x09, 0x2d, 0x38, 0x31, 0xbd,
	0x4e, 0xb7, 0x0d, 0x3c, 0x29, 0x16, 0x96, 0xc6, 0x33, 0x7e, 0x83, 0xc3, 0xdc, 0x6f, 0xd2, 0x84,
	0xca, 0x23, 0x2e, 0xe2, 0x9c, 0xc2, 0x4f, 0xd2, 0x86, 0xea, 0x9c, 0xb9, 0xb3, 0xa4, 0x4a, 0x6a,
	0x71, 0x51, 0xfe, 0xa5, 0x64, 0xfe, 0x00, 0x47, 0xd9, 0x88, 0x61, 0x1f, 0x74, 0xa0, 0xa6, 0x32,
	0x8c, 0x35, 0xe2, 0x95, 0xf9, 0x63, 0x52, 0xd0, 0x6c, 0xef, 0xaf, 0xdb, 0xde, 0x87, 0x63, 0xb5,
	0xfd, 0x1f, 0xc1, 0x27, 0x02, 0x83, 0x60, 0x1b, 0xe1, 0x6d, 0x29, 0x09, 0xb0, 0x64, 0x84, 0xe7,
	0x31, 0xa0, 0xee, 0xc7, 0x40, 0xdc, 0x9b, 0xe9, 0x9a, 0x7c, 0x05, 0x0d, 0xc5, 0xfe, 0xcf, 0xba,
	0x8b, 0xd3, 0x5b, 0x02, 0xe1, 0x0c, 0xa9, 0xc5, 0x40, 0x08, 0x2e, 0xe2, 0xcb, 0xd1, 0xa1, 0xf0,
	0x86, 0x93, 0x5b, 0x8f, 0xee, 0x6f, 0x57, 0xdd, 0xb0, 0x8e, 0x85, 0xe5, 0x0b, 0x24, 0x93, 0xd8,
	0xad, 0xaa, 0xf2, 0x45, 0x0b, 0xf3, 0x43, 0x09, 0xda, 0x49, 0x39, 0x02, 0xc9, 0xc5, 0xb6, 0x7a,
	0x14, 0x36, 0x5e, 0x79, 0x4d, 0xe3, 0x0d, 0x32, 0xcd, 0x51, 0x89, 0x9a, 0xe3, 0x5b, 0x5a, 0x14,
	0xee, 0x29, 0xbb, 0xe3, 0x7d, 0x19, 0xbe, 0xc9, 0xc4, 0xfc, 0xcb, 0xb3, 0x05, 0x4e, 0xd1, 0x93,
	0xcc, 0x75, 0x17, 0xdb, 0xf2, 0x3d, 0x81, 0x83, 0x31, 0xba, 0x92, 0xe5, 0x92, 0xcd, 0x82, 0xe4,
	0x1c, 0x3a, 0x2e, 0x0b, 0x64, 0x1c, 0x60, 0xac, 0xc2, 0x69, 0xa3, 0xb4, 0xe6, 0xaf, 0x5e, 0xcd,
	0x1b, 0x27, 0x78, 0xd4, 0x2e, 0x6f, 0x05, 0x27, 0x56, 0xc1, 0xa8, 0x9d, 0xd1, 0xad, 0x99, 0x3d,
	0x65, 0x69, 0xdf, 0x95, 0x80, 0xc4, 0xa1, 0x87, 0x92, 0xc9, 0x59, 0xdc, 0xea, 0x3d, 0xd8, 0x73,
	0x02, 0x85, 0x3b, 0xde, 0x24, 0x92, 0xaa, 0x5b, 0x3a, 0x14, 0x36, 0xac, 0x5e, 0x91, 0xe4, 0x49,
	0xd2, 0xb1, 0xcc, 0xc0, 0x54, 0x72, 0x03, 0xd3, 0x86, 0x2a, 0x46, 0xc3, 0xa0, 0x8a, 0xa5, 0x16,
	0xa1, 0xea, 0x18, 0x83, 0x65, 0x5f, 0xaa, 0x4e, 0xcf, 0x60, 0xcb, 0x31, 0xa8, 0x69, 0x63, 0x70,
	0xf6, 0xba, 0x06, 0xcd, 0xe1, 0xc2, 0xb3, 0xaf, 0x26, 0xe8, 0xc9, 0x21, 0x8a, 0xb9, 0x63, 0x23,
	0xb9, 0x00, 0x58, 0x7a, 0x24, 0x21, 0x74, 0xc5, 0x30, 0x8d, 0x0e, 0x55, 0x1e, 0x4b, 0x13, 0x8f,
	0xa5, 0x83, 0xd0, 0x63, 0xcd, 0x9d, 0x25, 0xd7, 0x8b, 0x8c, 0x84, 0xae, 0x78, 0xe7, 0x06, 0xee,
	0xef, 0xb0, 0xaf, 0xdb, 0x09, 0x69, 0xd3, 0x02, 0x77, 0xd9, 0xc0, 0x3f, 0x87, 0x7a, 0xe2, 0x76,
	0xa4, 0x49, 0x73, 0xc6, 0xb7, 0x81, 0x77, 0x09, 0x5f, 0x64, 0x0d, 0x95, 0x74, 0x68, 0xa1, 0x35,
	0x1b, 0x6d, 0x5a, 0xe0, 0xbc, 0x51, 0xd6, 0xfb, 0xfa, 0x43, 0x4c, 0xda, 0x45, 0x4e, 0x60, 0x10,
	0xba, 0xf2, 0x5a, 0xab, 0xac, 0xf5, 0x77, 0x39, 0xe5, 0x7e, 0x6a, 0xc5, 0x2f, 0xe1, 0x20, 0x33,
	0x0b, 0xe4, 0xb8, 0xf0, 0xa5, 0xd9, 0xa0, 0xf0, 0x1c, 0x8c, 0xf5, 0xd3, 0x44, 0xcc, 0xed, 0xa3,
	0xb6, 0x41, 0xfb, 0x0a, 0x0e, 0x15, 0xfd, 0x4f, 0x94, 0x6a, 0x54, 0x48, 0x87, 0x16, 0x1a, 0x8b,
	0xd1, 0xa6, 0x05, 0xf6, 0x61, 0xee, 0x90, 0x5f, 0xa1, 0x6a, 0x61, 0x80, 0x92, 0xac, 0x89, 0xb2,
	0xb1, 0xa3, 0x0e, 0x32, 0x63, 0xba, 0x56, 0xa2, 0x45, 0x57, 0xc7, 0xd9, 0xdc, 0x19, 0xd5, 0xa2,
	0x6d, 0x3f, 0x7d, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xcf, 0xc5, 0xe5, 0x5e, 0x0a, 0x00, 0x00,
}
